nuget {
	nuspec {
		id = fix8.dev;
		version : ${RELEASE_MAJOR}.${RELEASE_MINOR}.${RELEASE_DATE}.${RELEASE_REVISION};
		title: FIX8 library (development);
		authors: {Fix8};
		owners: {Fix8, Sergey Sedreev};
		licenseUrl: "https://www.gnu.org/licenses/lgpl.html";
		projectUrl: "http://fix8.org/";
		iconUrl: "https://www.gnu.org/licenses/lgpl.html";
		requireLicenseAcceptance:false;
		summary: Prebuilt FIX8 library (develoment branch);
		
		// if you need to span several lines you can prefix a string with an @ symbol (exactly like c# does).
		description: @"Develop branch of FIX8 libraries";
		releaseNotes: "";
		copyright: Copyright 2013-2014;
		tags: { FIX8, native, CoApp, v${VERSION} };
	};

	dependencies {
        // This node defines any outside items which may be needed to consume this package.
        packages : {
            // This is a list of other NuGet packages required to use this package.
            // Each item follows the format "<pkg_name>/<version>"
			fix8.dependencies.getopt/1.0.20151130.1,
			fix8.dependencies.openssl/1.0.20151130.1,
			fix8.dependencies.poco/1.6.20151130.1,
			fix8.dependencies.tbb/4.4.20151130.1
        };
    }

	// the files that go into the content folders
	files {
	
		#defines {
			FIX8 = ..\..\;
		}
	
		// grab all the files in the include folder
		// the folder that contains all the .h files will 
		// automatically get added to the Includes path.
		include: { 
			#destination = ${d_include}\fix8; 
			"${FIX8}include\**\*"; 
			};

		// Documents that we want to ship with the package. 
		docs: {  "${FIX8}doc\**"; "${FIX8}schema\**" };
    
		// these declarations of lib, symbols and bin folders only apply
		// to the project when:
		// 		$(Platform) == x64
		//  	$(PlatformToolset) == v100 
		//		$(Configuration) == Debug
		[x64,v140,debug,desktop] { 
			lib: { ${FIX8}msvc\x64\bin\Debug\fix8d.lib; };
			symbols: { ${FIX8}msvc\x64\bin\Debug\fix8d.pdb; };
			bin: { ${FIX8}msvc\x64\bin\Debug\fix8d.dll; ${FIX8}msvc\x64\bin\Debug\f8cd.exe; ${FIX8}msvc\x64\bin\Debug\seqeditd.exe; };
		}
		
		[x64,v140,release,desktop] { 
			lib: { ${FIX8}msvc\x64\bin\Release\fix8.lib; };
			symbols: { ${FIX8}msvc\x64\bin\Release\fix8.pdb; };
			bin: { ${FIX8}msvc\x64\bin\Release\fix8.dll; ${FIX8}msvc\x64\bin\Release\f8c.exe; ${FIX8}msvc\x64\bin\Release\seqedit.exe; };
		}
			
		[x86,v140,debug,desktop] { 
			lib: { ${FIX8}msvc\Win32\bin\Debug\fix8d.lib; };
			symbols: { ${FIX8}msvc\Win32\bin\Debug\fix8d.pdb; };
			bin: { ${FIX8}msvc\Win32\bin\Debug\fix8d.dll; ${FIX8}msvc\Win32\bin\Debug\f8cd.exe; ${FIX8}msvc\Win32\bin\Debug\seqeditd.exe };
		}
		
		[x86,v140,release,desktop] { 
			lib: { ${FIX8}msvc\Win32\bin\Release\fix8.lib; };
			symbols: { ${FIX8}msvc\Win32\bin\Release\fix8.pdb; };
			bin: { ${FIX8}msvc\Win32\bin\Release\fix8.dll; ${FIX8}msvc\Win32\bin\Release\f8c.exe; ${FIX8}msvc\Win32\bin\Release\seqedit.exe };
		}
	};
	
	targets {
		// We're trying to be standard about these sorts of thing. (Will help with config.h later :D)
		Defines += HAS_FIX8;
	};
}